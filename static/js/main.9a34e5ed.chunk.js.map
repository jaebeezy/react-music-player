{"version":3,"sources":["components/Song.js","components/Player.js","components/LibrarySong.js","components/Library.js","components/Nav.js","data.js","App.js","reportWebVitals.js","index.js"],"names":["Song","isPlaying","currentSong","className","src","cover","alt","name","artist","Player","songs","setSongs","setCurrentSong","setIsPlaying","useState","currentTime","duration","songInfo","setSongInfo","useEffect","newSongs","map","song","id","active","audioRef","useRef","timeUpdateHandler","e","current","target","getTime","time","Math","floor","slice","skipTrackHandler","direction","currentIndex","findIndex","newIndex","length","min","max","value","type","onChange","onClick","icon","faAngleLeft","size","pause","play","faPause","faPlay","faAngleRight","onLoadedData","onLoadedMetadata","onTimeUpdate","ref","audio","onEnded","LibrarySong","Library","libraryStatus","Nav","setLibraryStatus","window","location","reload","chillHop","color","uuidv4","App","data","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a34e5ed.chunk.js","sourcesContent":["const Song = ({ isPlaying, currentSong }) => {\n  return (\n    <div className=\"song-container\">\n      <img\n        className={isPlaying ? \"song-playing\" : \"\"}\n        src={currentSong.cover}\n        alt={currentSong.name}\n      ></img>\n      <h2>{currentSong.name}</h2>\n      <h3>{currentSong.artist}</h3>\n    </div>\n  );\n};\n\nexport default Song;\n","import React, { useEffect, useState, useRef } from \"react\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faPlay,\n  faAngleLeft,\n  faAngleRight,\n  faPause,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst Player = ({\n  songs,\n  setSongs,\n  setCurrentSong,\n  currentSong,\n  isPlaying,\n  setIsPlaying,\n}) => {\n  // state for song current time and duration\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n  });\n\n  // use effect\n  useEffect(() => {\n    const newSongs = songs.map((song) => {\n      if (song.id === currentSong.id) {\n        return { ...song, active: true };\n      } else {\n        return { ...song, active: false };\n      }\n    });\n    setSongs(newSongs);\n  }, [currentSong]);\n\n  // ref to connect to audio html tag\n  const audioRef = useRef(null);\n\n  // handler to pause/play current song\n  const playSongHandler = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n      setIsPlaying(!isPlaying);\n    } else {\n      audioRef.current.play();\n      setIsPlaying(!isPlaying);\n    }\n  };\n\n  // updating current time on the state\n  const timeUpdateHandler = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    setSongInfo({ ...songInfo, currentTime: current, duration });\n  };\n\n  // handling the time for the song to load\n  const autoPlayHandler = () => {\n    if (isPlaying) {\n      audioRef.current.play();\n    }\n  };\n\n  // function for formatting seconds and minutes\n  const getTime = (time) => {\n    return (\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\n    );\n  };\n\n  // function to drag input bar\n  const dragHandler = (e) => {\n    audioRef.current.currentTime = e.target.value;\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\n  };\n\n  // function to skip current track\n  const skipTrackHandler = (direction) => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    let newIndex = 0;\n\n    switch (direction) {\n      case \"skip-forward\":\n        newIndex = (currentIndex + 1) % songs.length;\n        break;\n      case \"skip-back\":\n        newIndex = (songs.length - 1 + currentIndex) % songs.length;\n        break;\n      default:\n        newIndex = currentIndex;\n    }\n\n    setCurrentSong(songs[newIndex]);\n  };\n\n  // function to skip track when it ends\n  const songEndHandler = () => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    if (isPlaying) audioRef.current.play();\n  };\n\n  return (\n    <div className=\"player\">\n      <div className=\"time-control\">\n        <p>{getTime(songInfo.currentTime)}</p>\n        <input\n          min={0}\n          max={songInfo.duration}\n          value={songInfo.currentTime}\n          type=\"range\"\n          onChange={dragHandler}\n        />\n        <p>{getTime(songInfo.duration || 0)}</p>\n      </div>\n      <div className=\"play-control\">\n        <FontAwesomeIcon\n          onClick={() => skipTrackHandler(\"skip-back\")}\n          className=\"skip-back\"\n          icon={faAngleLeft}\n          size=\"2x\"\n        />\n        <FontAwesomeIcon\n          onClick={playSongHandler}\n          className=\"play\"\n          icon={isPlaying ? faPause : faPlay}\n          size=\"2x\"\n        />\n        <FontAwesomeIcon\n          onClick={() => skipTrackHandler(\"skip-forward\")}\n          className=\"skip-forward\"\n          icon={faAngleRight}\n          size=\"2x\"\n        />\n      </div>\n      <audio\n        onLoadedData={autoPlayHandler}\n        onLoadedMetadata={timeUpdateHandler}\n        onTimeUpdate={timeUpdateHandler}\n        ref={audioRef}\n        src={currentSong.audio}\n        onEnded={songEndHandler}\n      ></audio>\n    </div>\n  );\n};\n\nexport default Player;\n","import React from \"react\";\n\nconst LibrarySong = ({ setSongs, id, song, songs, setCurrentSong }) => {\n  const songSelectHandler = () => {\n    setCurrentSong(song);\n\n    const newSongs = songs.map((song) => {\n      if (song.id === id) {\n        return { ...song, active: true };\n      } else {\n        return { ...song, active: false };\n      }\n    });\n    setSongs(newSongs);\n  };\n\n  return (\n    <div\n      onClick={songSelectHandler}\n      className={`library-song ${song.active ? \"selected\" : \"\"}`}\n    >\n      <img src={song.cover} alt={song.name}></img>\n      <div className=\"song-description\">\n        <h3>{song.name}</h3>\n        <h4>{song.artist}</h4>\n      </div>\n    </div>\n  );\n};\n\nexport default LibrarySong;\n","import React from \"react\";\n\nimport LibrarySong from \"./LibrarySong\";\n\nconst Library = ({ libraryStatus, setSongs, songs, setCurrentSong }) => {\n  return (\n    <div className={`library ${libraryStatus ? \"active-library\" : \"\"}`}>\n      <h2>Library</h2>\n      <div className=\"library-songs\">\n        {songs.map((song) => (\n          <LibrarySong\n            songs={songs}\n            setCurrentSong={setCurrentSong}\n            song={song}\n            key={song.id}\n            id={song.id}\n            setSongs={setSongs}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Library;\n","import React from \"react\";\n\nconst Nav = ({ setLibraryStatus, libraryStatus }) => {\n  return (\n    <nav>\n      <h1 onClick={() => window.location.reload()}>🎵</h1>\n      <button onClick={() => setLibraryStatus(!libraryStatus)}>Library</button>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import { v4 as uuidv4 } from \"uuid\";\n\nfunction chillHop() {\n  return [\n    {\n      name: \"Beaver Creek\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\n      artist: \"Aso, Middle School, Aviino\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: true,\n    },\n    {\n      name: \"Daylight\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\n      artist: \"Aiguille\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\n      color: [\"#EF8EA9\", \"#ab417f\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Keep Going\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\n      artist: \"Swørn\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\n      color: [\"#CD607D\", \"#c94043\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Nightfall\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\n      artist: \"Aiguille\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\n      color: [\"#EF8EA9\", \"#ab417f\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Reflection\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\n      artist: \"Swørn\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\n      color: [\"#CD607D\", \"#c94043\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Under the City Stars\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\n      artist: \"Aso, Middle School, Aviino\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Isla Bella\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/7c9bf90a9ccf097b8408eea62ad6226f797a2107-1024x1024.jpg\",\n      artist: \"Kendall Miles\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=8349\",\n      color: [\"#CE7358\", \"#FDFBEC\"],\n      id: uuidv4(),\n      active: false,\n    },\n  ];\n}\n\nexport default chillHop;\n","import React, { useState } from \"react\";\n\nimport Song from \"./components/Song\";\nimport Player from \"./components/Player\";\nimport Library from \"./components/Library\";\nimport Nav from \"./components/Nav\";\n\nimport data from \"./data\";\n\nimport \"./styles/app.scss\";\n\nconst App = () => {\n  // state for song and current song\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  // state for switching true/false for active\n  const [isPlaying, setIsPlaying] = useState(false);\n  // state for library button activity\n  const [libraryStatus, setLibraryStatus] = useState(false);\n\n  return (\n    <div className={`app ${libraryStatus ? \"library-active\" : \"\"}`}>\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n      <Song isPlaying={isPlaying} currentSong={currentSong} />\n      <Player\n        setIsPlaying={setIsPlaying}\n        isPlaying={isPlaying}\n        currentSong={currentSong}\n        setCurrentSong={setCurrentSong}\n        songs={songs}\n        setSongs={setSongs}\n      />\n      <Library\n        libraryStatus={libraryStatus}\n        setSongs={setSongs}\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}